apiVersion: apps/v1
kind: Deployment
metadata:
  name: lyrarm64
  namespace: default
spec:
  selector:
    matchLabels:
      app: lyrarm64
  template:
    metadata:
      labels:
        app: lyrarm64
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: lyrarm64
      serviceAccountName: appsimulator
      securityContext:
        runAsUser: 1000
        #runAsUser: 0
      containers:
#      - name: nginx
#        securityContext:
#          allowPrivilegeEscalation: true
#          capabilities:
#            add: ["NET_ADMIN","CAP_SYS_ADMIN"]
#        image: 907513986313.dkr.ecr.us-west-2.amazonaws.com/lyra:nginx
#        imagePullPolicy: Always
#        command: ["nginx","-p","8077","-g","daemon off;"]
#        ports:
#          - containerPort: 8077
#            protocol: TCP
#            hostPort: 8077
      - name: lyra
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add: ["NET_ADMIN"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: 907513986313.dkr.ecr.us-west-2.amazonaws.com/lyra:lyra_starter_game
        imagePullPolicy: Always
        #command: ["/usr/local/lyra_starter_game/LyraServer.sh"]
        command: ["/bin/sh","-c"]
        args: ["/usr/local/lyra_starter_game/LyraServer.sh"] 
        lifecycle:
          postStart:
            exec:
              command: ["/usr/local/lyra_starter_game/create_node_port_svc.sh"]
          preStop:
            exec:
              command: ["/bin/sh","-c","kubectl delete svc `kubectl get svc|grep $POD_NAME | awk '{print $1}'`"]
        #resources:
        #  requests:
        #    cpu: 1000m
        #  limits:
        #    cpu: 4000m
        ports:
          - containerPort: 7777 
            protocol: UDP
            hostPort: 7777
