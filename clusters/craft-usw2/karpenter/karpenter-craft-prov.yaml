apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: craft
spec:
#  taints: 
#    - key: agones.dev/agones-system
#      effect: NoSchedule
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot","on-demand"]
    - key: kubernetes.io/arch
      operator: In
      values: ["arm64","amd64"]
    - key: karpenter.k8s.aws/instance-generation
      operator: Gt
      values: ["5"]
  limits:
    resources:
      cpu: 10000
  providerRef:
    name: craft
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: craft
spec:
  subnetSelector:
    karpenter.sh/discovery: craft-usw2-public
  securityGroupSelector:
    karpenter.sh/discovery: craft-usw2
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"
    
    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash -x
    alloc_id=`aws ec2 describe-addresses --filters "Name=tag:game-name,Values=craft" --query "Addresses[?AssociationId==null].AllocationId" --output text | awk '{print $1}'`
    if [ -z "$alloc_id" ]; then
      alloc_id=`aws ec2 allocate-address --tag-specifications 'ResourceType=elastic-ip,Tags=[{Key=game-name,Value=craft},{Key=Name,Value=craft}]' --query "AllocationId" --output text`
    fi
    TOKEN=`curl -s -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"`
    instance_id=`curl -s -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/instance-id`
    interface_id=`aws ec2 describe-network-interfaces --filters Name=tag:Name,Values=karpenter.sh/provisioner-name/craft --query "NetworkInterfaces[?Attachment.InstanceId == '$instance_id'].NetworkInterfaceId" --output text`
    aws ec2 associate-address --network-interface-id $interface_id --allocation-id $alloc_id
    --BOUNDARY 
