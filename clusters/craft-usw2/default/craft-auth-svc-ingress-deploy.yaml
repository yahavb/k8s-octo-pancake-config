apiVersion: v1
kind: Service
metadata:
  name: craft-auth-svc
spec:
  selector:
    app: craft-auth-app
  ports:
    - port: 80
      targetPort: 8000
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: craft-auth-ingres
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /auth/health
    alb.ingress.kubernetes.io/success-codes: '200-301'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-name: craft-auth-app
spec:
  rules:
    - http:
        paths:
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: craft-auth-svc
                port: 
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: craft-auth-app
  namespace: default
  labels:
    app: craft-auth-app
spec:
  selector:
    matchLabels:
      app: craft-auth-app
  template:
    metadata:
      labels:
        app: craft-auth-app
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: craft
      serviceAccountName: adaptivecraft
      containers:
      - name: app
        volumeMounts:
        - name: secrets-store-orders
          mountPath: "/mnt/secrets"
        env:
        - name: SECRET_FILE
          value: "/mnt/secrets/craftcraftusw2SecretAA604F6-CbrgEOMoOlpW"
        readinessProbe:
          httpGet:
            path: /auth/health/
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        image: 953892292675.dkr.ecr.us-west-2.amazonaws.com/authapp:py39arm64
        imagePullPolicy: Always
        command: ["/usr/src/app/start.sh"]
        resources:
          requests:
            cpu: 512m
            memory: 512Mi
        ports:
          - containerPort: 8000
      volumes:
      - name: secrets-store-orders
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: craft
