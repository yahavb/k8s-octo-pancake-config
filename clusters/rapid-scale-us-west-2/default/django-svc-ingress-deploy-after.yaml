apiVersion: v1
kind: Service
metadata:
  name: django-svc
spec:
  selector:
    app: django-app
  ports:
    - port: 80
      targetPort: 8000
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-ingres
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /logistics/health
    alb.ingress.kubernetes.io/success-codes: '200-301'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-name: django-app
spec:
  rules:
    - http:
        paths:
          - path: /logistics
            pathType: Prefix
            backend:
              service:
                name: django-svc
                port: 
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: default
  labels:
    app: django-app
spec:
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: default
      serviceAccountName: appsimulator
      containers:
      - name: app
        volumeMounts:
        - name: secrets-store-orders
          mountPath: "/mnt/secrets"
        env:
        - name: ORDER_QUEUE
          value: "https://sqs.us-west-2.amazonaws.com/274739860030/orders"
        - name: DELIVERY_QUEUE
          value: "https://sqs.us-west-2.amazonaws.com/274739860030/delivery"
        - name: SECRET_FILE
          value: "/mnt/secrets/rapidscaleSecretFD8D90A13fd-erW3rRZJDUbZ"
        readinessProbe:
          tcpSocket:
          #httpGet:
          #  path: /logistics/health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        image: 274739860030.dkr.ecr.us-west-2.amazonaws.com/djangoapp:multiarch-py3
        imagePullPolicy: Always
        command: ["/usr/src/app/start.sh"]
        resources:
          requests:
            cpu: 700m
            memory: 1Gi
          limits:
            cpu: 700m
            memory: 6Gi
        ports:
          - containerPort: 8000
      volumes:
      - name: secrets-store-orders
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: rapidscale
